[1/13] Performing build step for 'bootloader'
[1/1] C:\WINDOWS\system32\cmd.exe /C "cd /D E:\esp32\wifi\build\bootloader\esp-idf\esptool_py && e:\esp32\.espressif\python_env\idf5.2_py3.11_env\Scripts\python.exe E:/esp32/v5.2.5/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 E:/esp32/wifi/build/bootloader/bootloader.bin"
Bootloader binary size 0x68b0 bytes. 0x750 bytes (7%) free.
[2/13] No install step for 'bootloader'
[3/13] Completed 'bootloader'
[4/13] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/__/src/uart.c.obj
[5/13] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/__/src/mynvs.c.obj
[6/13] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/main.c.obj
[7/13] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/__/src/mywifi.c.obj
E:/esp32/wifi/src/mywifi.c: In function 'mqtt_event_handler':
E:/esp32/wifi/src/mywifi.c:43:33: warning: passing argument 2 of 'strncpy' makes pointer from integer without a cast [-Wint-conversion]
   43 |             strncpy(buffer,event->data_len,event->data); // 复制数据到缓冲区
      |                            ~~~~~^~~~~~~~~~
      |                                 |
      |                                 int
In file included from E:/esp32/wifi/main/main.h:10,
                 from E:/esp32/wifi/include/mywifi.h:3,
                 from E:/esp32/wifi/src/mywifi.c:1:
E:/esp32/.espressif/tools/xtensa-esp-elf/esp-13.2.0_20230928/xtensa-esp-elf/xtensa-esp-elf/sys-include/string.h:44:37: note: expected 'const char * restrict' but argument is of type 'int'
   44 | char    *strncpy (char *__restrict, const char *__restrict, size_t);
      |                                     ^
E:/esp32/wifi/src/mywifi.c:43:49: warning: passing argument 3 of 'strncpy' makes integer from pointer without a cast [-Wint-conversion]
   43 |             strncpy(buffer,event->data_len,event->data); // 复制数据到缓冲区
      |                                            ~~~~~^~~~~~
      |                                                 |
      |                                                 char *
E:/esp32/.espressif/tools/xtensa-esp-elf/esp-13.2.0_20230928/xtensa-esp-elf/xtensa-esp-elf/sys-include/string.h:44:61: note: expected 'size_t' {aka 'unsigned int'} but argument is of type 'char *'
   44 | char    *strncpy (char *__restrict, const char *__restrict, size_t);
      |                                                             ^~~~~~
E:/esp32/wifi/src/mywifi.c: In function 'static_ip_set':
E:/esp32/wifi/src/mywifi.c:151:35: warning: passing argument 2 of 'ip4addr_aton' from incompatible pointer type [-Wincompatible-pointer-types]
  151 |     ip4addr_aton(config.deviceIP, &ip_info.ip);      // IP
      |                                   ^~~~~~~~~~~
      |                                   |
      |                                   esp_ip4_addr_t * {aka struct esp_ip4_addr *}
In file included from E:/esp32/v5.2.5/esp-idf/components/lwip/lwip/src/include/lwip/ip_addr.h:43,
                 from E:/esp32/v5.2.5/esp-idf/components/lwip/lwip/src/include/lwip/sockets.h:46,
                 from E:/esp32/v5.2.5/esp-idf/components/lwip/include/lwip/sockets.h:8,
                 from E:/esp32/wifi/main/main.h:19:
E:/esp32/v5.2.5/esp-idf/components/lwip/lwip/src/include/lwip/ip4_addr.h:205:46: note: expected 'ip4_addr_t *' {aka 'struct ip4_addr *'} but argument is of type 'esp_ip4_addr_t *' {aka 'struct esp_ip4_addr *'}
  205 | int ip4addr_aton(const char *cp, ip4_addr_t *addr);
      |                                  ~~~~~~~~~~~~^~~~
E:/esp32/wifi/src/mywifi.c:152:40: warning: passing argument 2 of 'ip4addr_aton' from incompatible pointer type [-Wincompatible-pointer-types]
  152 |     ip4addr_aton(config.deviceNetMask, &ip_info.netmask); // 子网掩码
      |                                        ^~~~~~~~~~~~~~~~
      |                                        |
      |                                        esp_ip4_addr_t * {aka struct esp_ip4_addr *}
E:/esp32/v5.2.5/esp-idf/components/lwip/lwip/src/include/lwip/ip4_addr.h:205:46: note: expected 'ip4_addr_t *' {aka 'struct ip4_addr *'} but argument is of type 'esp_ip4_addr_t *' {aka 'struct esp_ip4_addr *'}
  205 | int ip4addr_aton(const char *cp, ip4_addr_t *addr);
      |                                  ~~~~~~~~~~~~^~~~
E:/esp32/wifi/src/mywifi.c:153:40: warning: passing argument 2 of 'ip4addr_aton' from incompatible pointer type [-Wincompatible-pointer-types]
  153 |     ip4addr_aton(config.deviceGateway, &ip_info.gw);      // 网关
      |                                        ^~~~~~~~~~~
      |                                        |
      |                                        esp_ip4_addr_t * {aka struct esp_ip4_addr *}
E:/esp32/v5.2.5/esp-idf/components/lwip/lwip/src/include/lwip/ip4_addr.h:205:46: note: expected 'ip4_addr_t *' {aka 'struct ip4_addr *'} but argument is of type 'esp_ip4_addr_t *' {aka 'struct esp_ip4_addr *'}
  205 | int ip4addr_aton(const char *cp, ip4_addr_t *addr);
      |                                  ~~~~~~~~~~~~^~~~
In file included from E:/esp32/wifi/main/main.h:15:
E:/esp32/wifi/src/mywifi.c: In function 'sta_getlocal_IP':
E:/esp32/wifi/src/mywifi.c:357:52: warning: passing argument 1 of 'ip4addr_ntoa' from incompatible pointer type [-Wincompatible-pointer-types]
  357 |         ESP_LOGI(TAG, "Local IP: %s", ip4addr_ntoa(&ip_info.ip));
      |                                                    ^~~~~~~~~~~
      |                                                    |
      |                                                    esp_ip4_addr_t * {aka struct esp_ip4_addr *}
E:/esp32/v5.2.5/esp-idf/components/log/include/esp_log.h:436:137: note: in definition of macro 'ESP_LOG_LEVEL'
  436 |         if (level==ESP_LOG_ERROR )          { esp_log_write(ESP_LOG_ERROR,      tag, LOG_FORMAT(E, format), esp_log_timestamp(), tag, ##__VA_ARGS__); } \
      |                                                                                                                                         ^~~~~~~~~~~
E:/esp32/v5.2.5/esp-idf/components/log/include/esp_log.h:368:38: note: in expansion of macro 'ESP_LOG_LEVEL_LOCAL'
  368 | #define ESP_LOGI( tag, format, ... ) ESP_LOG_LEVEL_LOCAL(ESP_LOG_INFO,    tag, format, ##__VA_ARGS__)
      |                                      ^~~~~~~~~~~~~~~~~~~
E:/esp32/wifi/src/mywifi.c:357:9: note: in expansion of macro 'ESP_LOGI'
  357 |         ESP_LOGI(TAG, "Local IP: %s", ip4addr_ntoa(&ip_info.ip));
      |         ^~~~~~~~
E:/esp32/v5.2.5/esp-idf/components/lwip/lwip/src/include/lwip/ip4_addr.h:207:38: note: expected 'const ip4_addr_t *' {aka 'const struct ip4_addr *'} but argument is of type 'esp_ip4_addr_t *' {aka 'struct esp_ip4_addr *'}
  207 | char *ip4addr_ntoa(const ip4_addr_t *addr);
      |                    ~~~~~~~~~~~~~~~~~~^~~~
E:/esp32/wifi/src/mywifi.c:357:52: warning: passing argument 1 of 'ip4addr_ntoa' from incompatible pointer type [-Wincompatible-pointer-types]
  357 |         ESP_LOGI(TAG, "Local IP: %s", ip4addr_ntoa(&ip_info.ip));
      |                                                    ^~~~~~~~~~~
      |                                                    |
      |                                                    esp_ip4_addr_t * {aka struct esp_ip4_addr *}
E:/esp32/v5.2.5/esp-idf/components/log/include/esp_log.h:437:137: note: in definition of macro 'ESP_LOG_LEVEL'
  437 |         else if (level==ESP_LOG_WARN )      { esp_log_write(ESP_LOG_WARN,       tag, LOG_FORMAT(W, format), esp_log_timestamp(), tag, ##__VA_ARGS__); } \
      |                                                                                                                                         ^~~~~~~~~~~
E:/esp32/v5.2.5/esp-idf/components/log/include/esp_log.h:368:38: note: in expansion of macro 'ESP_LOG_LEVEL_LOCAL'
  368 | #define ESP_LOGI( tag, format, ... ) ESP_LOG_LEVEL_LOCAL(ESP_LOG_INFO,    tag, format, ##__VA_ARGS__)
      |                                      ^~~~~~~~~~~~~~~~~~~
E:/esp32/wifi/src/mywifi.c:357:9: note: in expansion of macro 'ESP_LOGI'
  357 |         ESP_LOGI(TAG, "Local IP: %s", ip4addr_ntoa(&ip_info.ip));
      |         ^~~~~~~~
E:/esp32/v5.2.5/esp-idf/components/lwip/lwip/src/include/lwip/ip4_addr.h:207:38: note: expected 'const ip4_addr_t *' {aka 'const struct ip4_addr *'} but argument is of type 'esp_ip4_addr_t *' {aka 'struct esp_ip4_addr *'}
  207 | char *ip4addr_ntoa(const ip4_addr_t *addr);
      |                    ~~~~~~~~~~~~~~~~~~^~~~
E:/esp32/wifi/src/mywifi.c:357:52: warning: passing argument 1 of 'ip4addr_ntoa' from incompatible pointer type [-Wincompatible-pointer-types]
  357 |         ESP_LOGI(TAG, "Local IP: %s", ip4addr_ntoa(&ip_info.ip));
      |                                                    ^~~~~~~~~~~
      |                                                    |
      |                                                    esp_ip4_addr_t * {aka struct esp_ip4_addr *}
E:/esp32/v5.2.5/esp-idf/components/log/include/esp_log.h:438:137: note: in definition of macro 'ESP_LOG_LEVEL'
  438 |         else if (level==ESP_LOG_DEBUG )     { esp_log_write(ESP_LOG_DEBUG,      tag, LOG_FORMAT(D, format), esp_log_timestamp(), tag, ##__VA_ARGS__); } \
      |                                                                                                                                         ^~~~~~~~~~~
E:/esp32/v5.2.5/esp-idf/components/log/include/esp_log.h:368:38: note: in expansion of macro 'ESP_LOG_LEVEL_LOCAL'
  368 | #define ESP_LOGI( tag, format, ... ) ESP_LOG_LEVEL_LOCAL(ESP_LOG_INFO,    tag, format, ##__VA_ARGS__)
      |                                      ^~~~~~~~~~~~~~~~~~~
E:/esp32/wifi/src/mywifi.c:357:9: note: in expansion of macro 'ESP_LOGI'
  357 |         ESP_LOGI(TAG, "Local IP: %s", ip4addr_ntoa(&ip_info.ip));
      |         ^~~~~~~~
E:/esp32/v5.2.5/esp-idf/components/lwip/lwip/src/include/lwip/ip4_addr.h:207:38: note: expected 'const ip4_addr_t *' {aka 'const struct ip4_addr *'} but argument is of type 'esp_ip4_addr_t *' {aka 'struct esp_ip4_addr *'}
  207 | char *ip4addr_ntoa(const ip4_addr_t *addr);
      |                    ~~~~~~~~~~~~~~~~~~^~~~
E:/esp32/wifi/src/mywifi.c:357:52: warning: passing argument 1 of 'ip4addr_ntoa' from incompatible pointer type [-Wincompatible-pointer-types]
  357 |         ESP_LOGI(TAG, "Local IP: %s", ip4addr_ntoa(&ip_info.ip));
      |                                                    ^~~~~~~~~~~
      |                                                    |
      |                                                    esp_ip4_addr_t * {aka struct esp_ip4_addr *}
E:/esp32/v5.2.5/esp-idf/components/log/include/esp_log.h:439:137: note: in definition of macro 'ESP_LOG_LEVEL'
  439 |         else if (level==ESP_LOG_VERBOSE )   { esp_log_write(ESP_LOG_VERBOSE,    tag, LOG_FORMAT(V, format), esp_log_timestamp(), tag, ##__VA_ARGS__); } \
      |                                                                                                                                         ^~~~~~~~~~~
E:/esp32/v5.2.5/esp-idf/components/log/include/esp_log.h:368:38: note: in expansion of macro 'ESP_LOG_LEVEL_LOCAL'
  368 | #define ESP_LOGI( tag, format, ... ) ESP_LOG_LEVEL_LOCAL(ESP_LOG_INFO,    tag, format, ##__VA_ARGS__)
      |                                      ^~~~~~~~~~~~~~~~~~~
E:/esp32/wifi/src/mywifi.c:357:9: note: in expansion of macro 'ESP_LOGI'
  357 |         ESP_LOGI(TAG, "Local IP: %s", ip4addr_ntoa(&ip_info.ip));
      |         ^~~~~~~~
E:/esp32/v5.2.5/esp-idf/components/lwip/lwip/src/include/lwip/ip4_addr.h:207:38: note: expected 'const ip4_addr_t *' {aka 'const struct ip4_addr *'} but argument is of type 'esp_ip4_addr_t *' {aka 'struct esp_ip4_addr *'}
  207 | char *ip4addr_ntoa(const ip4_addr_t *addr);
      |                    ~~~~~~~~~~~~~~~~~~^~~~
E:/esp32/wifi/src/mywifi.c:357:52: warning: passing argument 1 of 'ip4addr_ntoa' from incompatible pointer type [-Wincompatible-pointer-types]
  357 |         ESP_LOGI(TAG, "Local IP: %s", ip4addr_ntoa(&ip_info.ip));
      |                                                    ^~~~~~~~~~~
      |                                                    |
      |                                                    esp_ip4_addr_t * {aka struct esp_ip4_addr *}
E:/esp32/v5.2.5/esp-idf/components/log/include/esp_log.h:440:137: note: in definition of macro 'ESP_LOG_LEVEL'
  440 |         else                                { esp_log_write(ESP_LOG_INFO,       tag, LOG_FORMAT(I, format), esp_log_timestamp(), tag, ##__VA_ARGS__); } \
      |                                                                                                                                         ^~~~~~~~~~~
E:/esp32/v5.2.5/esp-idf/components/log/include/esp_log.h:368:38: note: in expansion of macro 'ESP_LOG_LEVEL_LOCAL'
  368 | #define ESP_LOGI( tag, format, ... ) ESP_LOG_LEVEL_LOCAL(ESP_LOG_INFO,    tag, format, ##__VA_ARGS__)
      |                                      ^~~~~~~~~~~~~~~~~~~
E:/esp32/wifi/src/mywifi.c:357:9: note: in expansion of macro 'ESP_LOGI'
  357 |         ESP_LOGI(TAG, "Local IP: %s", ip4addr_ntoa(&ip_info.ip));
      |         ^~~~~~~~
E:/esp32/v5.2.5/esp-idf/components/lwip/lwip/src/include/lwip/ip4_addr.h:207:38: note: expected 'const ip4_addr_t *' {aka 'const struct ip4_addr *'} but argument is of type 'esp_ip4_addr_t *' {aka 'struct esp_ip4_addr *'}
  207 | char *ip4addr_ntoa(const ip4_addr_t *addr);
      |                    ~~~~~~~~~~~~~~~~~~^~~~
E:/esp32/wifi/src/mywifi.c:362:54: warning: passing argument 1 of 'ip4addr_ntoa' from incompatible pointer type [-Wincompatible-pointer-types]
  362 |         strcpy(wifiConfigInfo.deviceIP, ip4addr_ntoa(&ip_info.ip));
      |                                                      ^~~~~~~~~~~
      |                                                      |
      |                                                      esp_ip4_addr_t * {aka struct esp_ip4_addr *}
E:/esp32/v5.2.5/esp-idf/components/lwip/lwip/src/include/lwip/ip4_addr.h:207:38: note: expected 'const ip4_addr_t *' {aka 'const struct ip4_addr *'} but argument is of type 'esp_ip4_addr_t *' {aka 'struct esp_ip4_addr *'}
  207 | char *ip4addr_ntoa(const ip4_addr_t *addr);
      |                    ~~~~~~~~~~~~~~~~~~^~~~
E:/esp32/wifi/src/mywifi.c:363:59: warning: passing argument 1 of 'ip4addr_ntoa' from incompatible pointer type [-Wincompatible-pointer-types]
  363 |         strcpy(wifiConfigInfo.deviceNetMask, ip4addr_ntoa(&ip_info.netmask));
      |                                                           ^~~~~~~~~~~~~~~~
      |                                                           |
      |                                                           esp_ip4_addr_t * {aka struct esp_ip4_addr *}
E:/esp32/v5.2.5/esp-idf/components/lwip/lwip/src/include/lwip/ip4_addr.h:207:38: note: expected 'const ip4_addr_t *' {aka 'const struct ip4_addr *'} but argument is of type 'esp_ip4_addr_t *' {aka 'struct esp_ip4_addr *'}
  207 | char *ip4addr_ntoa(const ip4_addr_t *addr);
      |                    ~~~~~~~~~~~~~~~~~~^~~~
E:/esp32/wifi/src/mywifi.c:364:59: warning: passing argument 1 of 'ip4addr_ntoa' from incompatible pointer type [-Wincompatible-pointer-types]
  364 |         strcpy(wifiConfigInfo.deviceGateway, ip4addr_ntoa(&ip_info.gw));
      |                                                           ^~~~~~~~~~~
      |                                                           |
      |                                                           esp_ip4_addr_t * {aka struct esp_ip4_addr *}
E:/esp32/v5.2.5/esp-idf/components/lwip/lwip/src/include/lwip/ip4_addr.h:207:38: note: expected 'const ip4_addr_t *' {aka 'const struct ip4_addr *'} but argument is of type 'esp_ip4_addr_t *' {aka 'struct esp_ip4_addr *'}
  207 | char *ip4addr_ntoa(const ip4_addr_t *addr);
      |                    ~~~~~~~~~~~~~~~~~~^~~~
E:/esp32/wifi/src/mywifi.c: In function 'ap_getlocal_IP':
E:/esp32/wifi/src/mywifi.c:382:52: warning: passing argument 1 of 'ip4addr_ntoa' from incompatible pointer type [-Wincompatible-pointer-types]
  382 |         ESP_LOGI(TAG, "Local IP: %s", ip4addr_ntoa(&ip_info.ip));
      |                                                    ^~~~~~~~~~~
      |                                                    |
      |                                                    esp_ip4_addr_t * {aka struct esp_ip4_addr *}
E:/esp32/v5.2.5/esp-idf/components/log/include/esp_log.h:436:137: note: in definition of macro 'ESP_LOG_LEVEL'
  436 |         if (level==ESP_LOG_ERROR )          { esp_log_write(ESP_LOG_ERROR,      tag, LOG_FORMAT(E, format), esp_log_timestamp(), tag, ##__VA_ARGS__); } \
      |                                                                                                                                         ^~~~~~~~~~~
E:/esp32/v5.2.5/esp-idf/components/log/include/esp_log.h:368:38: note: in expansion of macro 'ESP_LOG_LEVEL_LOCAL'
  368 | #define ESP_LOGI( tag, format, ... ) ESP_LOG_LEVEL_LOCAL(ESP_LOG_INFO,    tag, format, ##__VA_ARGS__)
      |                                      ^~~~~~~~~~~~~~~~~~~
E:/esp32/wifi/src/mywifi.c:382:9: note: in expansion of macro 'ESP_LOGI'
  382 |         ESP_LOGI(TAG, "Local IP: %s", ip4addr_ntoa(&ip_info.ip));
      |         ^~~~~~~~
E:/esp32/v5.2.5/esp-idf/components/lwip/lwip/src/include/lwip/ip4_addr.h:207:38: note: expected 'const ip4_addr_t *' {aka 'const struct ip4_addr *'} but argument is of type 'esp_ip4_addr_t *' {aka 'struct esp_ip4_addr *'}
  207 | char *ip4addr_ntoa(const ip4_addr_t *addr);
      |                    ~~~~~~~~~~~~~~~~~~^~~~
E:/esp32/wifi/src/mywifi.c:382:52: warning: passing argument 1 of 'ip4addr_ntoa' from incompatible pointer type [-Wincompatible-pointer-types]
  382 |         ESP_LOGI(TAG, "Local IP: %s", ip4addr_ntoa(&ip_info.ip));
      |                                                    ^~~~~~~~~~~
      |                                                    |
      |                                                    esp_ip4_addr_t * {aka struct esp_ip4_addr *}
E:/esp32/v5.2.5/esp-idf/components/log/include/esp_log.h:437:137: note: in definition of macro 'ESP_LOG_LEVEL'
  437 |         else if (level==ESP_LOG_WARN )      { esp_log_write(ESP_LOG_WARN,       tag, LOG_FORMAT(W, format), esp_log_timestamp(), tag, ##__VA_ARGS__); } \
      |                                                                                                                                         ^~~~~~~~~~~
E:/esp32/v5.2.5/esp-idf/components/log/include/esp_log.h:368:38: note: in expansion of macro 'ESP_LOG_LEVEL_LOCAL'
  368 | #define ESP_LOGI( tag, format, ... ) ESP_LOG_LEVEL_LOCAL(ESP_LOG_INFO,    tag, format, ##__VA_ARGS__)
      |                                      ^~~~~~~~~~~~~~~~~~~
E:/esp32/wifi/src/mywifi.c:382:9: note: in expansion of macro 'ESP_LOGI'
  382 |         ESP_LOGI(TAG, "Local IP: %s", ip4addr_ntoa(&ip_info.ip));
      |         ^~~~~~~~
E:/esp32/v5.2.5/esp-idf/components/lwip/lwip/src/include/lwip/ip4_addr.h:207:38: note: expected 'const ip4_addr_t *' {aka 'const struct ip4_addr *'} but argument is of type 'esp_ip4_addr_t *' {aka 'struct esp_ip4_addr *'}
  207 | char *ip4addr_ntoa(const ip4_addr_t *addr);
      |                    ~~~~~~~~~~~~~~~~~~^~~~
E:/esp32/wifi/src/mywifi.c:382:52: warning: passing argument 1 of 'ip4addr_ntoa' from incompatible pointer type [-Wincompatible-pointer-types]
  382 |         ESP_LOGI(TAG, "Local IP: %s", ip4addr_ntoa(&ip_info.ip));
      |                                                    ^~~~~~~~~~~
      |                                                    |
      |                                                    esp_ip4_addr_t * {aka struct esp_ip4_addr *}
E:/esp32/v5.2.5/esp-idf/components/log/include/esp_log.h:438:137: note: in definition of macro 'ESP_LOG_LEVEL'
  438 |         else if (level==ESP_LOG_DEBUG )     { esp_log_write(ESP_LOG_DEBUG,      tag, LOG_FORMAT(D, format), esp_log_timestamp(), tag, ##__VA_ARGS__); } \
      |                                                                                                                                         ^~~~~~~~~~~
E:/esp32/v5.2.5/esp-idf/components/log/include/esp_log.h:368:38: note: in expansion of macro 'ESP_LOG_LEVEL_LOCAL'
  368 | #define ESP_LOGI( tag, format, ... ) ESP_LOG_LEVEL_LOCAL(ESP_LOG_INFO,    tag, format, ##__VA_ARGS__)
      |                                      ^~~~~~~~~~~~~~~~~~~
E:/esp32/wifi/src/mywifi.c:382:9: note: in expansion of macro 'ESP_LOGI'
  382 |         ESP_LOGI(TAG, "Local IP: %s", ip4addr_ntoa(&ip_info.ip));
      |         ^~~~~~~~
E:/esp32/v5.2.5/esp-idf/components/lwip/lwip/src/include/lwip/ip4_addr.h:207:38: note: expected 'const ip4_addr_t *' {aka 'const struct ip4_addr *'} but argument is of type 'esp_ip4_addr_t *' {aka 'struct esp_ip4_addr *'}
  207 | char *ip4addr_ntoa(const ip4_addr_t *addr);
      |                    ~~~~~~~~~~~~~~~~~~^~~~
E:/esp32/wifi/src/mywifi.c:382:52: warning: passing argument 1 of 'ip4addr_ntoa' from incompatible pointer type [-Wincompatible-pointer-types]
  382 |         ESP_LOGI(TAG, "Local IP: %s", ip4addr_ntoa(&ip_info.ip));
      |                                                    ^~~~~~~~~~~
      |                                                    |
      |                                                    esp_ip4_addr_t * {aka struct esp_ip4_addr *}
E:/esp32/v5.2.5/esp-idf/components/log/include/esp_log.h:439:137: note: in definition of macro 'ESP_LOG_LEVEL'
  439 |         else if (level==ESP_LOG_VERBOSE )   { esp_log_write(ESP_LOG_VERBOSE,    tag, LOG_FORMAT(V, format), esp_log_timestamp(), tag, ##__VA_ARGS__); } \
      |                                                                                                                                         ^~~~~~~~~~~
E:/esp32/v5.2.5/esp-idf/components/log/include/esp_log.h:368:38: note: in expansion of macro 'ESP_LOG_LEVEL_LOCAL'
  368 | #define ESP_LOGI( tag, format, ... ) ESP_LOG_LEVEL_LOCAL(ESP_LOG_INFO,    tag, format, ##__VA_ARGS__)
      |                                      ^~~~~~~~~~~~~~~~~~~
E:/esp32/wifi/src/mywifi.c:382:9: note: in expansion of macro 'ESP_LOGI'
  382 |         ESP_LOGI(TAG, "Local IP: %s", ip4addr_ntoa(&ip_info.ip));
      |         ^~~~~~~~
E:/esp32/v5.2.5/esp-idf/components/lwip/lwip/src/include/lwip/ip4_addr.h:207:38: note: expected 'const ip4_addr_t *' {aka 'const struct ip4_addr *'} but argument is of type 'esp_ip4_addr_t *' {aka 'struct esp_ip4_addr *'}
  207 | char *ip4addr_ntoa(const ip4_addr_t *addr);
      |                    ~~~~~~~~~~~~~~~~~~^~~~
E:/esp32/wifi/src/mywifi.c:382:52: warning: passing argument 1 of 'ip4addr_ntoa' from incompatible pointer type [-Wincompatible-pointer-types]
  382 |         ESP_LOGI(TAG, "Local IP: %s", ip4addr_ntoa(&ip_info.ip));
      |                                                    ^~~~~~~~~~~
      |                                                    |
      |                                                    esp_ip4_addr_t * {aka struct esp_ip4_addr *}
E:/esp32/v5.2.5/esp-idf/components/log/include/esp_log.h:440:137: note: in definition of macro 'ESP_LOG_LEVEL'
  440 |         else                                { esp_log_write(ESP_LOG_INFO,       tag, LOG_FORMAT(I, format), esp_log_timestamp(), tag, ##__VA_ARGS__); } \
      |                                                                                                                                         ^~~~~~~~~~~
E:/esp32/v5.2.5/esp-idf/components/log/include/esp_log.h:368:38: note: in expansion of macro 'ESP_LOG_LEVEL_LOCAL'
  368 | #define ESP_LOGI( tag, format, ... ) ESP_LOG_LEVEL_LOCAL(ESP_LOG_INFO,    tag, format, ##__VA_ARGS__)
      |                                      ^~~~~~~~~~~~~~~~~~~
E:/esp32/wifi/src/mywifi.c:382:9: note: in expansion of macro 'ESP_LOGI'
  382 |         ESP_LOGI(TAG, "Local IP: %s", ip4addr_ntoa(&ip_info.ip));
      |         ^~~~~~~~
E:/esp32/v5.2.5/esp-idf/components/lwip/lwip/src/include/lwip/ip4_addr.h:207:38: note: expected 'const ip4_addr_t *' {aka 'const struct ip4_addr *'} but argument is of type 'esp_ip4_addr_t *' {aka 'struct esp_ip4_addr *'}
  207 | char *ip4addr_ntoa(const ip4_addr_t *addr);
      |                    ~~~~~~~~~~~~~~~~~~^~~~
E:/esp32/wifi/src/mywifi.c:384:54: warning: passing argument 1 of 'ip4addr_ntoa' from incompatible pointer type [-Wincompatible-pointer-types]
  384 |         strcpy(wifiConfigInfo.deviceIP, ip4addr_ntoa(&ip_info.ip));
      |                                                      ^~~~~~~~~~~
      |                                                      |
      |                                                      esp_ip4_addr_t * {aka struct esp_ip4_addr *}
E:/esp32/v5.2.5/esp-idf/components/lwip/lwip/src/include/lwip/ip4_addr.h:207:38: note: expected 'const ip4_addr_t *' {aka 'const struct ip4_addr *'} but argument is of type 'esp_ip4_addr_t *' {aka 'struct esp_ip4_addr *'}
  207 | char *ip4addr_ntoa(const ip4_addr_t *addr);
      |                    ~~~~~~~~~~~~~~~~~~^~~~
[8/13] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/__/src/io_control.c.obj
[9/13] Linking C static library esp-idf\main\libmain.a
[10/13] Generating ld/sections.ld
[11/13] Linking CXX executable main.elf
[12/13] Generating binary image from built executable
esptool.py v4.9.0
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated E:/esp32/wifi/build/main.bin
[13/13] C:\WINDOWS\system32\cmd.exe /C "cd /D E:\esp32\wifi\build\esp-idf\esptool_py && e:\esp32\.espressif\python_env\idf5.2_py3.11_env\Scripts\python.exe E:/esp32/v5.2.5/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app E:/esp32/wifi/build/partition_table/partition-table.bin E:/esp32/wifi/build/main.bin"
main.bin binary size 0xe1cb0 bytes. Smallest app partition is 0x100000 bytes. 0x1e350 bytes (12%) free.

[1/9] Performing build step for 'bootloader'
[1/1] C:\WINDOWS\system32\cmd.exe /C "cd /D E:\esp32\wifi\build\bootloader\esp-idf\esptool_py && e:\esp32\.espressif\python_env\idf5.2_py3.11_env\Scripts\python.exe E:/esp32/v5.2.5/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 E:/esp32/wifi/build/bootloader/bootloader.bin"
Bootloader binary size 0x68b0 bytes. 0x750 bytes (7%) free.
[2/9] No install step for 'bootloader'
[3/9] Completed 'bootloader'
[4/9] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/__/src/mywifi.c.obj
In file included from E:/esp32/wifi/main/main.h:15,
                 from E:/esp32/wifi/include/mywifi.h:3,
                 from E:/esp32/wifi/src/mywifi.c:1:
E:/esp32/wifi/src/mywifi.c: In function 'ap_getlocal_IP':
E:/esp32/wifi/src/mywifi.c:380:52: warning: passing argument 1 of 'ip4addr_ntoa' from incompatible pointer type [-Wincompatible-pointer-types]
  380 |         ESP_LOGI(TAG, "Local IP: %s", ip4addr_ntoa(&ip_info.ip));
      |                                                    ^~~~~~~~~~~
      |                                                    |
      |                                                    esp_ip4_addr_t * {aka struct esp_ip4_addr *}
E:/esp32/v5.2.5/esp-idf/components/log/include/esp_log.h:436:137: note: in definition of macro 'ESP_LOG_LEVEL'
  436 |         if (level==ESP_LOG_ERROR )          { esp_log_write(ESP_LOG_ERROR,      tag, LOG_FORMAT(E, format), esp_log_timestamp(), tag, ##__VA_ARGS__); } \
      |                                                                                                                                         ^~~~~~~~~~~
E:/esp32/v5.2.5/esp-idf/components/log/include/esp_log.h:368:38: note: in expansion of macro 'ESP_LOG_LEVEL_LOCAL'
  368 | #define ESP_LOGI( tag, format, ... ) ESP_LOG_LEVEL_LOCAL(ESP_LOG_INFO,    tag, format, ##__VA_ARGS__)
      |                                      ^~~~~~~~~~~~~~~~~~~
E:/esp32/wifi/src/mywifi.c:380:9: note: in expansion of macro 'ESP_LOGI'
  380 |         ESP_LOGI(TAG, "Local IP: %s", ip4addr_ntoa(&ip_info.ip));
      |         ^~~~~~~~
In file included from E:/esp32/v5.2.5/esp-idf/components/lwip/lwip/src/include/lwip/ip_addr.h:43,
                 from E:/esp32/v5.2.5/esp-idf/components/lwip/lwip/src/include/lwip/sockets.h:46,
                 from E:/esp32/v5.2.5/esp-idf/components/lwip/include/lwip/sockets.h:8,
                 from E:/esp32/wifi/main/main.h:19:
E:/esp32/v5.2.5/esp-idf/components/lwip/lwip/src/include/lwip/ip4_addr.h:207:38: note: expected 'const ip4_addr_t *' {aka 'const struct ip4_addr *'} but argument is of type 'esp_ip4_addr_t *' {aka 'struct esp_ip4_addr *'}
  207 | char *ip4addr_ntoa(const ip4_addr_t *addr);
      |                    ~~~~~~~~~~~~~~~~~~^~~~
E:/esp32/wifi/src/mywifi.c:380:52: warning: passing argument 1 of 'ip4addr_ntoa' from incompatible pointer type [-Wincompatible-pointer-types]
  380 |         ESP_LOGI(TAG, "Local IP: %s", ip4addr_ntoa(&ip_info.ip));
      |                                                    ^~~~~~~~~~~
      |                                                    |
      |                                                    esp_ip4_addr_t * {aka struct esp_ip4_addr *}
E:/esp32/v5.2.5/esp-idf/components/log/include/esp_log.h:437:137: note: in definition of macro 'ESP_LOG_LEVEL'
  437 |         else if (level==ESP_LOG_WARN )      { esp_log_write(ESP_LOG_WARN,       tag, LOG_FORMAT(W, format), esp_log_timestamp(), tag, ##__VA_ARGS__); } \
      |                                                                                                                                         ^~~~~~~~~~~
E:/esp32/v5.2.5/esp-idf/components/log/include/esp_log.h:368:38: note: in expansion of macro 'ESP_LOG_LEVEL_LOCAL'
  368 | #define ESP_LOGI( tag, format, ... ) ESP_LOG_LEVEL_LOCAL(ESP_LOG_INFO,    tag, format, ##__VA_ARGS__)
      |                                      ^~~~~~~~~~~~~~~~~~~
E:/esp32/wifi/src/mywifi.c:380:9: note: in expansion of macro 'ESP_LOGI'
  380 |         ESP_LOGI(TAG, "Local IP: %s", ip4addr_ntoa(&ip_info.ip));
      |         ^~~~~~~~
E:/esp32/v5.2.5/esp-idf/components/lwip/lwip/src/include/lwip/ip4_addr.h:207:38: note: expected 'const ip4_addr_t *' {aka 'const struct ip4_addr *'} but argument is of type 'esp_ip4_addr_t *' {aka 'struct esp_ip4_addr *'}
  207 | char *ip4addr_ntoa(const ip4_addr_t *addr);
      |                    ~~~~~~~~~~~~~~~~~~^~~~
E:/esp32/wifi/src/mywifi.c:380:52: warning: passing argument 1 of 'ip4addr_ntoa' from incompatible pointer type [-Wincompatible-pointer-types]
  380 |         ESP_LOGI(TAG, "Local IP: %s", ip4addr_ntoa(&ip_info.ip));
      |                                                    ^~~~~~~~~~~
      |                                                    |
      |                                                    esp_ip4_addr_t * {aka struct esp_ip4_addr *}
E:/esp32/v5.2.5/esp-idf/components/log/include/esp_log.h:438:137: note: in definition of macro 'ESP_LOG_LEVEL'
  438 |         else if (level==ESP_LOG_DEBUG )     { esp_log_write(ESP_LOG_DEBUG,      tag, LOG_FORMAT(D, format), esp_log_timestamp(), tag, ##__VA_ARGS__); } \
      |                                                                                                                                         ^~~~~~~~~~~
E:/esp32/v5.2.5/esp-idf/components/log/include/esp_log.h:368:38: note: in expansion of macro 'ESP_LOG_LEVEL_LOCAL'
  368 | #define ESP_LOGI( tag, format, ... ) ESP_LOG_LEVEL_LOCAL(ESP_LOG_INFO,    tag, format, ##__VA_ARGS__)
      |                                      ^~~~~~~~~~~~~~~~~~~
E:/esp32/wifi/src/mywifi.c:380:9: note: in expansion of macro 'ESP_LOGI'
  380 |         ESP_LOGI(TAG, "Local IP: %s", ip4addr_ntoa(&ip_info.ip));
      |         ^~~~~~~~
E:/esp32/v5.2.5/esp-idf/components/lwip/lwip/src/include/lwip/ip4_addr.h:207:38: note: expected 'const ip4_addr_t *' {aka 'const struct ip4_addr *'} but argument is of type 'esp_ip4_addr_t *' {aka 'struct esp_ip4_addr *'}
  207 | char *ip4addr_ntoa(const ip4_addr_t *addr);
      |                    ~~~~~~~~~~~~~~~~~~^~~~
E:/esp32/wifi/src/mywifi.c:380:52: warning: passing argument 1 of 'ip4addr_ntoa' from incompatible pointer type [-Wincompatible-pointer-types]
  380 |         ESP_LOGI(TAG, "Local IP: %s", ip4addr_ntoa(&ip_info.ip));
      |                                                    ^~~~~~~~~~~
      |                                                    |
      |                                                    esp_ip4_addr_t * {aka struct esp_ip4_addr *}
E:/esp32/v5.2.5/esp-idf/components/log/include/esp_log.h:439:137: note: in definition of macro 'ESP_LOG_LEVEL'
  439 |         else if (level==ESP_LOG_VERBOSE )   { esp_log_write(ESP_LOG_VERBOSE,    tag, LOG_FORMAT(V, format), esp_log_timestamp(), tag, ##__VA_ARGS__); } \
      |                                                                                                                                         ^~~~~~~~~~~
E:/esp32/v5.2.5/esp-idf/components/log/include/esp_log.h:368:38: note: in expansion of macro 'ESP_LOG_LEVEL_LOCAL'
  368 | #define ESP_LOGI( tag, format, ... ) ESP_LOG_LEVEL_LOCAL(ESP_LOG_INFO,    tag, format, ##__VA_ARGS__)
      |                                      ^~~~~~~~~~~~~~~~~~~
E:/esp32/wifi/src/mywifi.c:380:9: note: in expansion of macro 'ESP_LOGI'
  380 |         ESP_LOGI(TAG, "Local IP: %s", ip4addr_ntoa(&ip_info.ip));
      |         ^~~~~~~~
E:/esp32/v5.2.5/esp-idf/components/lwip/lwip/src/include/lwip/ip4_addr.h:207:38: note: expected 'const ip4_addr_t *' {aka 'const struct ip4_addr *'} but argument is of type 'esp_ip4_addr_t *' {aka 'struct esp_ip4_addr *'}
  207 | char *ip4addr_ntoa(const ip4_addr_t *addr);
      |                    ~~~~~~~~~~~~~~~~~~^~~~
E:/esp32/wifi/src/mywifi.c:380:52: warning: passing argument 1 of 'ip4addr_ntoa' from incompatible pointer type [-Wincompatible-pointer-types]
  380 |         ESP_LOGI(TAG, "Local IP: %s", ip4addr_ntoa(&ip_info.ip));
      |                                                    ^~~~~~~~~~~
      |                                                    |
      |                                                    esp_ip4_addr_t * {aka struct esp_ip4_addr *}
E:/esp32/v5.2.5/esp-idf/components/log/include/esp_log.h:440:137: note: in definition of macro 'ESP_LOG_LEVEL'
  440 |         else                                { esp_log_write(ESP_LOG_INFO,       tag, LOG_FORMAT(I, format), esp_log_timestamp(), tag, ##__VA_ARGS__); } \
      |                                                                                                                                         ^~~~~~~~~~~
E:/esp32/v5.2.5/esp-idf/components/log/include/esp_log.h:368:38: note: in expansion of macro 'ESP_LOG_LEVEL_LOCAL'
  368 | #define ESP_LOGI( tag, format, ... ) ESP_LOG_LEVEL_LOCAL(ESP_LOG_INFO,    tag, format, ##__VA_ARGS__)
      |                                      ^~~~~~~~~~~~~~~~~~~
E:/esp32/wifi/src/mywifi.c:380:9: note: in expansion of macro 'ESP_LOGI'
  380 |         ESP_LOGI(TAG, "Local IP: %s", ip4addr_ntoa(&ip_info.ip));
      |         ^~~~~~~~
E:/esp32/v5.2.5/esp-idf/components/lwip/lwip/src/include/lwip/ip4_addr.h:207:38: note: expected 'const ip4_addr_t *' {aka 'const struct ip4_addr *'} but argument is of type 'esp_ip4_addr_t *' {aka 'struct esp_ip4_addr *'}
  207 | char *ip4addr_ntoa(const ip4_addr_t *addr);
      |                    ~~~~~~~~~~~~~~~~~~^~~~
[5/9] Linking C static library esp-idf\main\libmain.a
[6/9] Generating ld/sections.ld
[7/9] Linking CXX executable main.elf
[8/9] Generating binary image from built executable
esptool.py v4.9.0
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated E:/esp32/wifi/build/main.bin
[9/9] C:\WINDOWS\system32\cmd.exe /C "cd /D E:\esp32\wifi\build\esp-idf\esptool_py && e:\esp32\.espressif\python_env\idf5.2_py3.11_env\Scripts\python.exe E:/esp32/v5.2.5/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app E:/esp32/wifi/build/partition_table/partition-table.bin E:/esp32/wifi/build/main.bin"
main.bin binary size 0xe1f00 bytes. Smallest app partition is 0x100000 bytes. 0x1e100 bytes (12%) free.
